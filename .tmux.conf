# inspired from: https://github.com/nicknisi/dotfiles/tree/master/tmux

# set shell
set -g default-shell /bin/zsh

# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# split panes using | and -
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %

# force a reload of the config file
# reload config file (change file location to your the tmux.conf you want to use)
bind r source-file ~/.tmux.conf

# quick pane cycling
unbind ^A
bind ^A select-pane -t :.+

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# resize pane
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5
bind -n C-Right resize-pane -R 10
bind -n C-Left resize-pane -L 10

bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1
bind -n S-Right resize-pane -R 2
bind -n S-Left resize-pane -L 2
# tmux status bar color
set-option -g status-keys "emacs"
set -g status-left-length 50
set -g status-right " Show Terminal #(date '+%a, %b %d - %I:%M') "


bind c new-window -c "#{pane_current_path}"
set -g base-index 1
set -g renumber-windows on

bind-key b break-pane -d

# set is an alias for set-option
# setw is an alias for set-window-option

################## COLORS ##################
# Colors: https://i.stack.imgur.com/e63et.png
tm_color_active=colour208
tm_color_inactive=colour241
tm_color_neutral=colour255

################## GENERAL OPTIONS ##################
# More options: https://github.com/tmux/tmux/blob/master/options-table.c

# Automatically renumber tmux windows
set-option -g renumber-windows on

set-option -g mouse on
set-option -g status-left-length 32
set-option -g status-right-length 150

# Update status bar every minute
set-option -g status-interval 60

# Enable RGB colour if running in xterm(1)
set-option -sa terminal-overrides ",xterm*:Tc"

# Number of lines of history to remember
set-option -g history-limit 100000

# Required otherwise vim cannot display 256 colors
# Normally it's `tmux-256color` but for some reason on my new laptop I lose the feature `history-substring-search` brought by Prezto with xfce4-terminal
set-option -g default-terminal "screen-256color"

# default is black
set-option -g status-bg default
set-option -g status-fg $tm_color_neutral
set-option -g status-right-attr bold

# Pane border
set-option -g pane-border-fg $tm_color_inactive
set-option -g pane-active-border-fg $tm_color_active

# Pane number display
set-option -g display-panes-active-colour $tm_color_active
set-option -g display-panes-colour $tm_color_inactive

# Make pane index start with 1
set-option -g base-index 1

# vim mode for keys (i for insert, esc, etc)
set-window-option -g mode-keys vi

# The window (GUI) title of the terminal will be based on the curent tmux window
set-option -g set-titles on
set-option -g set-titles-string "#T - #W"

# No delay for ESC key
set-option -sg escape-time 0

# Window titles
set-window-option -g window-status-attr none
set-window-option -g window-status-current-attr bold,underscore
set-window-option -g window-status-current-fg $tm_color_active
# #I: number; #W name
set-window-option -g  window-status-format "#I #W"
set-window-option -g  window-status-current-format "#I #W"

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
set-window-option -g aggressive-resize on

# Make window index start with 1
set-window-option -g pane-base-index 1


################## BINDINGS ##################
#
# ~~~~~ Copy mode settings ~~~~~
#
# For linux, change "pbcopy" to "xclip -in -selection clipboard" (I believe)
# setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "xclip -in -selection clipboard"

# update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "pbcopy"

# Open new panes/windows in the same directory
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# pane movement shortcuts
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# ctrl-b, hold ctrl and k+
# -r gives 500ms to press the key again
bind -r C-k resize-pane -U
bind -r C-j resize-pane -D
bind -r C-h resize-pane -L
bind -r C-l resize-pane -R

# Bind : to command-prompt like vim.  This is the default in tmux already.
bind : command-prompt


################## LEFT STATUS BAR - TMUX SESSION ##################
# Diplay session name
set-option -g status-left " #[fg=colour200][#S] "

################## RIGHT STATUS BAR - EXTERNAL CONTENT ##################
tm_separator="#[fg=colour236]|"
tm_weather="#[fg=colour123]#(cat /tmp/weather.txt)"
tm_battery="#(~/git/dotfiles/scripts/getBatteryState.sh)"
tm_time='#[fg=colour190]%a %h-%d %H:%M:%S'

set-option -g status-right $tm_separator' '$tm_weather' '$tm_separator' '$tm_battery' '$tm_separator' '$tm_time' '
set-option -g allow-rename off
run-shell ~/software/tmux-yank/yank.tmux

